<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:windows="clr-namespace:Outracks.Fusion.Windows">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="ScrollBar.xaml"></ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

	<Color x:Key="WindowBackgroundColor">#31343a</Color>
    <Color x:Key="HighlightColorDark">#383A4</Color>
    <Color x:Key="HighlightColor">#000</Color>
    <Color x:Key="HighlightColor2">#585A67</Color>
    <Color x:Key="BlueColor">#787A87</Color>
    <Color x:Key="ForegroundColor">#FFF4F4F5</Color>

    <SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="HighlightColorBrushDark" Color="{StaticResource HighlightColorDark}"/>
    <SolidColorBrush x:Key="HighlightColorBrush" Color="{StaticResource HighlightColor}" Opacity="0.2"/>
    <SolidColorBrush x:Key="HighlightColorBrush2" Color="{StaticResource HighlightColor2}"/>
    <SolidColorBrush x:Key="BlueColorBrush" Color="{StaticResource BlueColor}"/>
	<SolidColorBrush x:Key="ForegroundColorBrush" Color="{StaticResource ForegroundColor}"/>

	<Thickness x:Key="FocusBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />

	<Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Background="{TemplateBinding Background}">
						<ContentPresenter x:Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Margin="{TemplateBinding Padding}"
                          RecognizesAccessKey="True" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HighlightColorBrush}"  />
                        </Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource BlueColorBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TextBox}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="MinWidth" Value="20" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="border" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ContentHost" Margin="0" />
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type Slider}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border VerticalAlignment="Center" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Rectangle x:Name="TrackBackground" Fill="#cccccc" RadiusX="2" RadiusY="2" VerticalAlignment="Center" Height="3" Grid.Row="1" />
							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.DecreaseLarge}">
										<RepeatButton.Template>
											<ControlTemplate TargetType="{x:Type RepeatButton}">
												<Grid>
													<!-- Transparent rect used for hit testing -->
													<Rectangle Fill="Transparent" />
													<Rectangle Fill="#37b4dc" RadiusX="2" RadiusY="2" VerticalAlignment="Center" Height="3" Margin="0,0,-5,0" />
												</Grid>
											</ControlTemplate>
										</RepeatButton.Template>
									</RepeatButton>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb" />
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Ellipse Fill="#ffffff" Stroke="#e0e0df" Height="15" Width="15"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="FancyWindowStyle" TargetType="windows:FancyWindow">
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="WindowStyle" Value="SingleBorderWindow" />
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="windows:FancyWindow">
                    <Border x:Name="WindowBorder">
                        <Grid>
							<!-- FIXME: Hardcoded border style. -->
							<!-- It would be better to add a way to set individual styles per window. -->
							<Border BorderThickness="1" BorderBrush="#31343a">
							<!-- <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"> -->
								<AdornerDecorator>
									<Grid x:Name="LayoutRoot">
										<Grid.RowDefinitions>
											<RowDefinition Height="28" />
											<RowDefinition Height="*" />
											<RowDefinition Height="15" />
										</Grid.RowDefinitions>
										<ContentPresenter Grid.Row="1" Grid.RowSpan="2" />

                                        <Rectangle x:Name="HeaderBackground" Height="28" Fill="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" VerticalAlignment="Top" Grid.Row="0"/>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
											<Button Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" ToolTip="Minimize" Style="{StaticResource WindowButtonStyle}">
												<Button.Content>
													<Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
														<Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" StrokeThickness="1"  />
													</Grid>
												</Button.Content>
											</Button>
											<Grid Margin="1,0,1,0">
												<Button x:Name="Restore" Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" ToolTip="Restore" Visibility="Collapsed" Style="{StaticResource WindowButtonStyle}">
													<Button.Content>
														<Grid Width="30" Height="28" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,1">
															<Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" StrokeThickness="1">
																<Path.RenderTransform>
																	<ScaleTransform CenterX="4" CenterY="4" ScaleX="1.3" ScaleY="1.3"></ScaleTransform>
																</Path.RenderTransform>
															</Path>
														</Grid>
													</Button.Content>
												</Button>
											</Grid>
											<Button x:Name="Maximize" Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" ToolTip="Maximize" Visibility="Collapsed" Style="{StaticResource WindowButtonStyle}">
												<Button.Content>
													<Grid Width="30" Height="28" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,1.8">
														<Path Data="M0,0 L10,0 L10,10 L0,10 L0,0 Z" Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" StrokeThickness="1"  />
													</Grid>
												</Button.Content>
											</Button>
											<Button Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" ToolTip="Close"  Style="{StaticResource WindowButtonStyle}">
												<Button.Content>
													<Grid Width="30" Height="28" RenderTransform="1,0,0,1,0,1">
														<Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" StrokeThickness="1"  />
													</Grid>
												</Button.Content>
											</Button>
										</StackPanel>
										<StackPanel Height="28" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
											<Image Width="16" Height="16" Margin="6 0 0 0" VerticalAlignment="Center">
												<Image.InputBindings>
													<MouseBinding MouseAction="LeftDoubleClick" Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" />
												</Image.InputBindings>
												<Image.Source>
													<BitmapImage DecodePixelWidth="16" UriSource="pack://application:,,,/Outracks.Fusion.Windows;component/Fuse.ico" />
												</Image.Source>
											</Image>
										</StackPanel>

										<TextBlock x:Name="WindowTitleTextBlock" Grid.Row="0" Text="{TemplateBinding Title}" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="8 0 0 0" FontSize="14" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
										<StackPanel WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0" Margin="28 0 0 0" Orientation="Horizontal" VerticalAlignment="Center" x:Name="MenuContainer" />

										<Grid Grid.Row="2">
											<Path x:Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1" HorizontalAlignment="Right"
                                        Stroke="{StaticResource BlueColorBrush}" StrokeThickness="1" Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
										</Grid>
									</Grid>
								</AdornerDecorator>
							</Border>
						</Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
							<Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" ResizeBorderThickness="3" GlassFrameThickness="0" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Name="NoTitlebar" TargetType="windows:FancyWindow">
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="WindowStyle" Value="None" />
	</Style>

	<Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorBrush}"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="BorderPressed" Background="{StaticResource HighlightColorBrush}" Opacity="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="MainContent" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderPressed" Property="Background" Value="{StaticResource HighlightColorBrush2}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderPressed" Property="Background" Value="{StaticResource BlueColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource WindowBackgroundColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>