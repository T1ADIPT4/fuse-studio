// Generated by texts-cs.js (DO NOT EDIT)

using System.Reactive.Subjects;

namespace Outracks.Fuse
{
    public static class Texts
    {
        /** Browse */
        public static Text Button_Browse => _Button_Browse.AsText();
        static readonly BehaviorSubject<string> _Button_Browse = new BehaviorSubject<string>(Strings.Button_Browse);

        /** Cancel */
        public static Text Button_Cancel => _Button_Cancel.AsText();
        static readonly BehaviorSubject<string> _Button_Cancel = new BehaviorSubject<string>(Strings.Button_Cancel);

        /** Browse */
        public static Text Dashboard_Button_Browse => _Dashboard_Button_Browse.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Button_Browse = new BehaviorSubject<string>(Strings.Dashboard_Button_Browse);

        /** Create */
        public static Text Dashboard_Button_Create => _Dashboard_Button_Create.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Button_Create = new BehaviorSubject<string>(Strings.Dashboard_Button_Create);

        /** Open */
        public static Text Dashboard_Button_Open => _Dashboard_Button_Open.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Button_Open = new BehaviorSubject<string>(Strings.Dashboard_Button_Open);

        /** Community */
        public static Text Dashboard_Community => _Dashboard_Community.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Community = new BehaviorSubject<string>(Strings.Dashboard_Community);

        /** Made something cool? Join a thriving
community of Fuse enthusiasts */
        public static Text Dashboard_Community_Text => _Dashboard_Community_Text.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Community_Text = new BehaviorSubject<string>(Strings.Dashboard_Community_Text);

        /** Docs */
        public static Text Dashboard_Docs => _Dashboard_Docs.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Docs = new BehaviorSubject<string>(Strings.Dashboard_Docs);

        /** Need some technical information?
Search the reference docs. */
        public static Text Dashboard_Docs_Text => _Dashboard_Docs_Text.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Docs_Text = new BehaviorSubject<string>(Strings.Dashboard_Docs_Text);

        /** Learn */
        public static Text Dashboard_Learn => _Dashboard_Learn.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Learn = new BehaviorSubject<string>(Strings.Dashboard_Learn);

        /** New to Fuse? Explore our Handbook,
Tutorials and Examples. */
        public static Text Dashboard_Learn_Text => _Dashboard_Learn_Text.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Learn_Text = new BehaviorSubject<string>(Strings.Dashboard_Learn_Text);

        /** Remove from list */
        public static Text Dashboard_Project_Remove => _Dashboard_Project_Remove.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Project_Remove = new BehaviorSubject<string>(Strings.Dashboard_Project_Remove);

        /** Recent Projects */
        public static Text Dashboard_Recent_Projects => _Dashboard_Recent_Projects.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Recent_Projects = new BehaviorSubject<string>(Strings.Dashboard_Recent_Projects);

        /** Last opened */
        public static Text Dashboard_LastOpened => _Dashboard_LastOpened.AsText();
        static readonly BehaviorSubject<string> _Dashboard_LastOpened = new BehaviorSubject<string>(Strings.Dashboard_LastOpened);

        /** Location */
        public static Text Dashboard_Location => _Dashboard_Location.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Location = new BehaviorSubject<string>(Strings.Dashboard_Location);

        /** Description */
        public static Text Dashboard_Description => _Dashboard_Description.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Description = new BehaviorSubject<string>(Strings.Dashboard_Description);

        /** New */
        public static Text Dashboard_New_Prefix => _Dashboard_New_Prefix.AsText();
        static readonly BehaviorSubject<string> _Dashboard_New_Prefix = new BehaviorSubject<string>(Strings.Dashboard_New_Prefix);

        /** Open */
        public static Text Dashboard_Open_Prefix => _Dashboard_Open_Prefix.AsText();
        static readonly BehaviorSubject<string> _Dashboard_Open_Prefix = new BehaviorSubject<string>(Strings.Dashboard_Open_Prefix);

        /** Edit */
        public static Text MainMenu_Edit => _MainMenu_Edit.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Edit = new BehaviorSubject<string>(Strings.MainMenu_Edit);

        /** Element */
        public static Text MainMenu_Element => _MainMenu_Element.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Element = new BehaviorSubject<string>(Strings.MainMenu_Element);

        /** Export */
        public static Text MainMenu_Export => _MainMenu_Export.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Export = new BehaviorSubject<string>(Strings.MainMenu_Export);

        /** File */
        public static Text MainMenu_File => _MainMenu_File.AsText();
        static readonly BehaviorSubject<string> _MainMenu_File = new BehaviorSubject<string>(Strings.MainMenu_File);

        /** Help */
        public static Text MainMenu_Help => _MainMenu_Help.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Help = new BehaviorSubject<string>(Strings.MainMenu_Help);

        /** Preview */
        public static Text MainMenu_Preview => _MainMenu_Preview.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Preview = new BehaviorSubject<string>(Strings.MainMenu_Preview);

        /** Project */
        public static Text MainMenu_Project => _MainMenu_Project.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Project = new BehaviorSubject<string>(Strings.MainMenu_Project);

        /** Tools */
        public static Text MainMenu_Tools => _MainMenu_Tools.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Tools = new BehaviorSubject<string>(Strings.MainMenu_Tools);

        /** Viewport */
        public static Text MainMenu_Viewport => _MainMenu_Viewport.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Viewport = new BehaviorSubject<string>(Strings.MainMenu_Viewport);

        /** Window */
        public static Text MainMenu_Window => _MainMenu_Window.AsText();
        static readonly BehaviorSubject<string> _MainMenu_Window = new BehaviorSubject<string>(Strings.MainMenu_Window);

        /** Copy */
        public static Text SubMenu_Edit_Copy => _SubMenu_Edit_Copy.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Edit_Copy = new BehaviorSubject<string>(Strings.SubMenu_Edit_Copy);

        /** Cut */
        public static Text SubMenu_Edit_Cut => _SubMenu_Edit_Cut.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Edit_Cut = new BehaviorSubject<string>(Strings.SubMenu_Edit_Cut);

        /** Delete */
        public static Text SubMenu_Edit_Delete => _SubMenu_Edit_Delete.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Edit_Delete = new BehaviorSubject<string>(Strings.SubMenu_Edit_Delete);

        /** Paste */
        public static Text SubMenu_Edit_Paste => _SubMenu_Edit_Paste.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Edit_Paste = new BehaviorSubject<string>(Strings.SubMenu_Edit_Paste);

        /** Select All */
        public static Text SubMenu_Edit_SelectAll => _SubMenu_Edit_SelectAll.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Edit_SelectAll = new BehaviorSubject<string>(Strings.SubMenu_Edit_SelectAll);

        /** Deselect */
        public static Text SubMenu_Element_Deselect => _SubMenu_Element_Deselect.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Element_Deselect = new BehaviorSubject<string>(Strings.SubMenu_Element_Deselect);

        /** Locate in editor */
        public static Text SubMenu_Element_LocateInEditor => _SubMenu_Element_LocateInEditor.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Element_LocateInEditor = new BehaviorSubject<string>(Strings.SubMenu_Element_LocateInEditor);

        /** Remove element */
        public static Text SubMenu_Element_Remove => _SubMenu_Element_Remove.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Element_Remove = new BehaviorSubject<string>(Strings.SubMenu_Element_Remove);

        /** Export for Android */
        public static Text SubMenu_Export_ExportForAndroid => _SubMenu_Export_ExportForAndroid.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_ExportForAndroid = new BehaviorSubject<string>(Strings.SubMenu_Export_ExportForAndroid);

        /** Export for Android Emulator */
        public static Text SubMenu_Export_ExportForAndroidEmulator => _SubMenu_Export_ExportForAndroidEmulator.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_ExportForAndroidEmulator = new BehaviorSubject<string>(Strings.SubMenu_Export_ExportForAndroidEmulator);

        /** Export for iOS */
        public static Text SubMenu_Export_ExportForiOS => _SubMenu_Export_ExportForiOS.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_ExportForiOS = new BehaviorSubject<string>(Strings.SubMenu_Export_ExportForiOS);

        /** Export for iOS Simulator */
        public static Text SubMenu_Export_ExportForiOSSimulator => _SubMenu_Export_ExportForiOSSimulator.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_ExportForiOSSimulator = new BehaviorSubject<string>(Strings.SubMenu_Export_ExportForiOSSimulator);

        /** Export for Desktop (.NET) */
        public static Text SubMenu_Export_ExportForDotNet => _SubMenu_Export_ExportForDotNet.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_ExportForDotNet = new BehaviorSubject<string>(Strings.SubMenu_Export_ExportForDotNet);

        /** Export for Desktop (native) */
        public static Text SubMenu_Export_ExportForNative => _SubMenu_Export_ExportForNative.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_ExportForNative = new BehaviorSubject<string>(Strings.SubMenu_Export_ExportForNative);

        /** Clean build files */
        public static Text SubMenu_Export_Clean => _SubMenu_Export_Clean.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Export_Clean = new BehaviorSubject<string>(Strings.SubMenu_Export_Clean);

        /** New... */
        public static Text SubMenu_File_New => _SubMenu_File_New.AsText();
        static readonly BehaviorSubject<string> _SubMenu_File_New = new BehaviorSubject<string>(Strings.SubMenu_File_New);

        /** Open... */
        public static Text SubMenu_File_Open => _SubMenu_File_Open.AsText();
        static readonly BehaviorSubject<string> _SubMenu_File_Open = new BehaviorSubject<string>(Strings.SubMenu_File_Open);

        /** Quit */
        public static Text SubMenu_File_Quit => _SubMenu_File_Quit.AsText();
        static readonly BehaviorSubject<string> _SubMenu_File_Quit = new BehaviorSubject<string>(Strings.SubMenu_File_Quit);

        /** Exit */
        public static Text SubMenu_File_Exit => _SubMenu_File_Exit.AsText();
        static readonly BehaviorSubject<string> _SubMenu_File_Exit = new BehaviorSubject<string>(Strings.SubMenu_File_Exit);

        /** Community */
        public static Text SubMenu_Help_Community => _SubMenu_Help_Community.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Help_Community = new BehaviorSubject<string>(Strings.SubMenu_Help_Community);

        /** Documentation */
        public static Text SubMenu_Help_Documentation => _SubMenu_Help_Documentation.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Help_Documentation = new BehaviorSubject<string>(Strings.SubMenu_Help_Documentation);

        /** Examples */
        public static Text SubMenu_Help_Examples => _SubMenu_Help_Examples.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Help_Examples = new BehaviorSubject<string>(Strings.SubMenu_Help_Examples);

        /** Tutorial */
        public static Text SubMenu_Help_Tutorial => _SubMenu_Help_Tutorial.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Help_Tutorial = new BehaviorSubject<string>(Strings.SubMenu_Help_Tutorial);

        /** Forums */
        public static Text SubMenu_Help_Forums => _SubMenu_Help_Forums.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Help_Forums = new BehaviorSubject<string>(Strings.SubMenu_Help_Forums);

        /** Report issue */
        public static Text SubMenu_Help_ReportIssue => _SubMenu_Help_ReportIssue.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Help_ReportIssue = new BehaviorSubject<string>(Strings.SubMenu_Help_ReportIssue);

        /** Check for updates */
        public static Text SubMenu_Updates_CheckForUpdates => _SubMenu_Updates_CheckForUpdates.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Updates_CheckForUpdates = new BehaviorSubject<string>(Strings.SubMenu_Updates_CheckForUpdates);

        /** Check automatically */
        public static Text SubMenu_Updates_CheckAutomatically => _SubMenu_Updates_CheckAutomatically.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Updates_CheckAutomatically = new BehaviorSubject<string>(Strings.SubMenu_Updates_CheckAutomatically);

        /** There's an update available */
        public static Text SubMenu_Updates_UpdateAvailable => _SubMenu_Updates_UpdateAvailable.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Updates_UpdateAvailable = new BehaviorSubject<string>(Strings.SubMenu_Updates_UpdateAvailable);

        /** Do you want to download the latest version now? */
        public static Text SubMenu_Updates_DownloadLatestQuestion => _SubMenu_Updates_DownloadLatestQuestion.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Updates_DownloadLatestQuestion = new BehaviorSubject<string>(Strings.SubMenu_Updates_DownloadLatestQuestion);

        /** Preview on Android */
        public static Text SubMenu_Preview_Android => _SubMenu_Preview_Android.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_Android = new BehaviorSubject<string>(Strings.SubMenu_Preview_Android);

        /** Preview on Android Emulator */
        public static Text SubMenu_Preview_AndroidEmulator => _SubMenu_Preview_AndroidEmulator.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_AndroidEmulator = new BehaviorSubject<string>(Strings.SubMenu_Preview_AndroidEmulator);

        /** Build flags */
        public static Text SubMenu_Preview_BuildFlags => _SubMenu_Preview_BuildFlags.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_BuildFlags = new BehaviorSubject<string>(Strings.SubMenu_Preview_BuildFlags);

        /** Preview on iOS */
        public static Text SubMenu_Preview_iOS => _SubMenu_Preview_iOS.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_iOS = new BehaviorSubject<string>(Strings.SubMenu_Preview_iOS);

        /** Preview on iOS Simulator */
        public static Text SubMenu_Preview_iOSSimulator => _SubMenu_Preview_iOSSimulator.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_iOSSimulator = new BehaviorSubject<string>(Strings.SubMenu_Preview_iOSSimulator);

        /** Preview on Desktop (native) */
        public static Text SubMenu_Preview_Native => _SubMenu_Preview_Native.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_Native = new BehaviorSubject<string>(Strings.SubMenu_Preview_Native);

        /** Rebuild */
        public static Text SubMenu_Preview_Rebuild => _SubMenu_Preview_Rebuild.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_Rebuild = new BehaviorSubject<string>(Strings.SubMenu_Preview_Rebuild);

        /** Reconnect USB (Android) */
        public static Text SubMenu_Preview_Reconnect => _SubMenu_Preview_Reconnect.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_Reconnect = new BehaviorSubject<string>(Strings.SubMenu_Preview_Reconnect);

        /** Refresh */
        public static Text SubMenu_Preview_Refresh => _SubMenu_Preview_Refresh.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Preview_Refresh = new BehaviorSubject<string>(Strings.SubMenu_Preview_Refresh);

        /** Open Project Folder */
        public static Text SubMenu_Project_OpenFolder => _SubMenu_Project_OpenFolder.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Project_OpenFolder = new BehaviorSubject<string>(Strings.SubMenu_Project_OpenFolder);

        /** Open in Sublime Text 3 */
        public static Text SubMenu_Project_OpenSublime => _SubMenu_Project_OpenSublime.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Project_OpenSublime = new BehaviorSubject<string>(Strings.SubMenu_Project_OpenSublime);

        /** Open in Visual Studio Code */
        public static Text SubMenu_Project_OpenVSCode => _SubMenu_Project_OpenVSCode.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Project_OpenVSCode = new BehaviorSubject<string>(Strings.SubMenu_Project_OpenVSCode);

        /** Open in Terminal */
        public static Text SubMenu_Project_OpenTerminal => _SubMenu_Project_OpenTerminal.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Project_OpenTerminal = new BehaviorSubject<string>(Strings.SubMenu_Project_OpenTerminal);

        /** Install Android SDK */
        public static Text SubMenu_Tools_InstallSDK => _SubMenu_Tools_InstallSDK.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Tools_InstallSDK = new BehaviorSubject<string>(Strings.SubMenu_Tools_InstallSDK);

        /** Install Atom plugin */
        public static Text SubMenu_Tools_InstallAtomPlugin => _SubMenu_Tools_InstallAtomPlugin.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Tools_InstallAtomPlugin = new BehaviorSubject<string>(Strings.SubMenu_Tools_InstallAtomPlugin);

        /** Install Sublime Text 3 plugin */
        public static Text SubMenu_Tools_InstallSublimePlugin => _SubMenu_Tools_InstallSublimePlugin.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Tools_InstallSublimePlugin = new BehaviorSubject<string>(Strings.SubMenu_Tools_InstallSublimePlugin);

        /** Install Visual Studio Code extension */
        public static Text SubMenu_Tools_InstallVSCodeExtension => _SubMenu_Tools_InstallVSCodeExtension.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Tools_InstallVSCodeExtension = new BehaviorSubject<string>(Strings.SubMenu_Tools_InstallVSCodeExtension);

        /** Setup guide */
        public static Text SubMenu_Tools_Setup => _SubMenu_Tools_Setup.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Tools_Setup = new BehaviorSubject<string>(Strings.SubMenu_Tools_Setup);

        /** Print Uno config */
        public static Text SubMenu_Tools_Config => _SubMenu_Tools_Config.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Tools_Config = new BehaviorSubject<string>(Strings.SubMenu_Tools_Config);

        /** Close Viewport */
        public static Text SubMenu_Viewport_Close => _SubMenu_Viewport_Close.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_Close = new BehaviorSubject<string>(Strings.SubMenu_Viewport_Close);

        /** Select device */
        public static Text SubMenu_Viewport_Device => _SubMenu_Viewport_Device.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_Device = new BehaviorSubject<string>(Strings.SubMenu_Viewport_Device);

        /** Flip aspect */
        public static Text SubMenu_Viewport_FlipAspect => _SubMenu_Viewport_FlipAspect.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_FlipAspect = new BehaviorSubject<string>(Strings.SubMenu_Viewport_FlipAspect);

        /** Go back */
        public static Text SubMenu_Viewport_Goback => _SubMenu_Viewport_Goback.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_Goback = new BehaviorSubject<string>(Strings.SubMenu_Viewport_Goback);

        /** New Viewport */
        public static Text SubMenu_Viewport_New => _SubMenu_Viewport_New.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_New = new BehaviorSubject<string>(Strings.SubMenu_Viewport_New);

        /** Restart */
        public static Text SubMenu_Viewport_Restart => _SubMenu_Viewport_Restart.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_Restart = new BehaviorSubject<string>(Strings.SubMenu_Viewport_Restart);

        /** Selection */
        public static Text SubMenu_Viewport_Selection => _SubMenu_Viewport_Selection.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Viewport_Selection = new BehaviorSubject<string>(Strings.SubMenu_Viewport_Selection);

        /** Compact mode */
        public static Text SubMenu_Window_CompactMode => _SubMenu_Window_CompactMode.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Window_CompactMode = new BehaviorSubject<string>(Strings.SubMenu_Window_CompactMode);

        /** Keep window on top */
        public static Text SubMenu_Window_KeepWindowOnTop => _SubMenu_Window_KeepWindowOnTop.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Window_KeepWindowOnTop = new BehaviorSubject<string>(Strings.SubMenu_Window_KeepWindowOnTop);

        /** Language */
        public static Text SubMenu_Window_Language => _SubMenu_Window_Language.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Window_Language = new BehaviorSubject<string>(Strings.SubMenu_Window_Language);

        /** Light theme */
        public static Text SubMenu_Window_LightTheme => _SubMenu_Window_LightTheme.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Window_LightTheme = new BehaviorSubject<string>(Strings.SubMenu_Window_LightTheme);

        /** Dark theme */
        public static Text SubMenu_Window_DarkTheme => _SubMenu_Window_DarkTheme.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Window_DarkTheme = new BehaviorSubject<string>(Strings.SubMenu_Window_DarkTheme);

        /** OK */
        public static Text Button_Ok => _Button_Ok.AsText();
        static readonly BehaviorSubject<string> _Button_Ok = new BehaviorSubject<string>(Strings.Button_Ok);

        /** Setup guide */
        public static Text Dialog_SetupGuide_Caption => _Dialog_SetupGuide_Caption.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_Caption = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_Caption);

        /** A text editor is required to use fuse X. */
        public static Text Dialog_SetupGuide_Comment1 => _Dialog_SetupGuide_Comment1.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_Comment1 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_Comment1);

        /** We recommend  */
        public static Text Dialog_SetupGuide_Comment2_1 => _Dialog_SetupGuide_Comment2_1.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_Comment2_1 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_Comment2_1);

        /**  or  */
        public static Text Dialog_SetupGuide_Comment2_2 => _Dialog_SetupGuide_Comment2_2.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_Comment2_2 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_Comment2_2);

        /** , and our accompanying plugins. */
        public static Text Dialog_SetupGuide_Comment2_3 => _Dialog_SetupGuide_Comment2_3.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_Comment2_3 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_Comment2_3);

        /** This wizard will look for the software on your system and help you install or update our plugins. */
        public static Text Dialog_SetupGuide_Comment3 => _Dialog_SetupGuide_Comment3.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_Comment3 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_Comment3);

        /** We also have a plugin for  */
        public static Text Dialog_SetupGuide_SeeAlso1 => _Dialog_SetupGuide_SeeAlso1.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_SeeAlso1 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_SeeAlso1);

        /** . */
        public static Text Dialog_SetupGuide_SeeAlso2 => _Dialog_SetupGuide_SeeAlso2.AsText();
        static readonly BehaviorSubject<string> _Dialog_SetupGuide_SeeAlso2 = new BehaviorSubject<string>(Strings.Dialog_SetupGuide_SeeAlso2);

        /** Sketch Import */
        public static Text SubMenu_Project_SketchImport => _SubMenu_Project_SketchImport.AsText();
        static readonly BehaviorSubject<string> _SubMenu_Project_SketchImport = new BehaviorSubject<string>(Strings.SubMenu_Project_SketchImport);

        /** Done */
        public static Text Button_Done => _Button_Done.AsText();
        static readonly BehaviorSubject<string> _Button_Done = new BehaviorSubject<string>(Strings.Button_Done);

        /** Clear */
        public static Text LogView_Tab_Clear => _LogView_Tab_Clear.AsText();
        static readonly BehaviorSubject<string> _LogView_Tab_Clear = new BehaviorSubject<string>(Strings.LogView_Tab_Clear);

        /** Log */
        public static Text LogView_Tab_Log => _LogView_Tab_Log.AsText();
        static readonly BehaviorSubject<string> _LogView_Tab_Log = new BehaviorSubject<string>(Strings.LogView_Tab_Log);

        /** Problems */
        public static Text LogView_Tab_Problems => _LogView_Tab_Problems.AsText();
        static readonly BehaviorSubject<string> _LogView_Tab_Problems = new BehaviorSubject<string>(Strings.LogView_Tab_Problems);

        /** Mac only */
        public static Text Label_MacOnly => _Label_MacOnly.AsText();
        static readonly BehaviorSubject<string> _Label_MacOnly = new BehaviorSubject<string>(Strings.Label_MacOnly);

        /** Your language preference was updated.

The new language will come into full effect next time you start fuse X. */
        public static Text LanguageUpdated_Text => _LanguageUpdated_Text.AsText();
        static readonly BehaviorSubject<string> _LanguageUpdated_Text = new BehaviorSubject<string>(Strings.LanguageUpdated_Text);

        /** This is an unregistered copy */
        public static Text NagScreen_Caption => _NagScreen_Caption.AsText();
        static readonly BehaviorSubject<string> _NagScreen_Caption = new BehaviorSubject<string>(Strings.NagScreen_Caption);

        /** Hello! Thanks for trying out fuse X.

Activation is required to use this software.

Free Trial available:
• Try all fuse X has to offer for one month.
• No credit card required. */
        public static Text NagScreen_Text => _NagScreen_Text.AsText();
        static readonly BehaviorSubject<string> _NagScreen_Text = new BehaviorSubject<string>(Strings.NagScreen_Text);

        /** Sign in */
        public static Text NagScreen_Button_SignIn => _NagScreen_Button_SignIn.AsText();
        static readonly BehaviorSubject<string> _NagScreen_Button_SignIn = new BehaviorSubject<string>(Strings.NagScreen_Button_SignIn);

        /** Enter code */
        public static Text NagScreen_Button_EnterCode => _NagScreen_Button_EnterCode.AsText();
        static readonly BehaviorSubject<string> _NagScreen_Button_EnterCode = new BehaviorSubject<string>(Strings.NagScreen_Button_EnterCode);

        /** Would you like to activate now? */
        public static Text NagScreen_Question => _NagScreen_Question.AsText();
        static readonly BehaviorSubject<string> _NagScreen_Question = new BehaviorSubject<string>(Strings.NagScreen_Question);

        /** Enable to select elements in the app. */
        public static Text Toolbar_Selection_Tooltip => _Toolbar_Selection_Tooltip.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Selection_Tooltip = new BehaviorSubject<string>(Strings.Toolbar_Selection_Tooltip);

        /** Enable to select elements in the app. Disable to interact with the app. */
        public static Text Toolbar_Selection_Tooltip2 => _Toolbar_Selection_Tooltip2.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Selection_Tooltip2 = new BehaviorSubject<string>(Strings.Toolbar_Selection_Tooltip2);

        /** Selection */
        public static Text Toolbar_Selection_Button => _Toolbar_Selection_Button.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Selection_Button = new BehaviorSubject<string>(Strings.Toolbar_Selection_Button);

        /** Enable to intract with the app. */
        public static Text Toolbar_Touch_Tooltip => _Toolbar_Touch_Tooltip.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Touch_Tooltip = new BehaviorSubject<string>(Strings.Toolbar_Touch_Tooltip);

        /** Touch */
        public static Text Toolbar_Touch_Button => _Toolbar_Touch_Button.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Touch_Button = new BehaviorSubject<string>(Strings.Toolbar_Touch_Button);

        /** Click to add a new Viewport. */
        public static Text Toolbar_Viewport_Tooltip => _Toolbar_Viewport_Tooltip.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Viewport_Tooltip = new BehaviorSubject<string>(Strings.Toolbar_Viewport_Tooltip);

        /** Add Viewport */
        public static Text Toolbar_Viewport_Button => _Toolbar_Viewport_Button.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Viewport_Button = new BehaviorSubject<string>(Strings.Toolbar_Viewport_Button);

        /** Switch between normal and compact mode. Click to switch mode. */
        public static Text Toolbar_Compact_Tooltip => _Toolbar_Compact_Tooltip.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Compact_Tooltip = new BehaviorSubject<string>(Strings.Toolbar_Compact_Tooltip);

        /** Compact */
        public static Text Toolbar_Compact_Button => _Toolbar_Compact_Button.AsText();
        static readonly BehaviorSubject<string> _Toolbar_Compact_Button = new BehaviorSubject<string>(Strings.Toolbar_Compact_Button);

        /** undefined */
        public static Text Auth_Text_LicensedTo1 => _Auth_Text_LicensedTo1.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_LicensedTo1 = new BehaviorSubject<string>(Strings.Auth_Text_LicensedTo1);

        /** undefined */
        public static Text Auth_Text_LicensedTo2 => _Auth_Text_LicensedTo2.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_LicensedTo2 = new BehaviorSubject<string>(Strings.Auth_Text_LicensedTo2);

        /** trial day left */
        public static Text Auth_Text_TrialDayLeft => _Auth_Text_TrialDayLeft.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_TrialDayLeft = new BehaviorSubject<string>(Strings.Auth_Text_TrialDayLeft);

        /** trial days left */
        public static Text Auth_Text_TrialDaysLeft => _Auth_Text_TrialDaysLeft.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_TrialDaysLeft = new BehaviorSubject<string>(Strings.Auth_Text_TrialDaysLeft);

        /** Your license has expired. Please  */
        public static Text Auth_Text_LicenseExpired1 => _Auth_Text_LicenseExpired1.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_LicenseExpired1 = new BehaviorSubject<string>(Strings.Auth_Text_LicenseExpired1);

        /** sign in */
        public static Text Auth_Text_LicenseExpired2 => _Auth_Text_LicenseExpired2.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_LicenseExpired2 = new BehaviorSubject<string>(Strings.Auth_Text_LicenseExpired2);

        /**  to reactivate. */
        public static Text Auth_Text_LicenseExpired3 => _Auth_Text_LicenseExpired3.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_LicenseExpired3 = new BehaviorSubject<string>(Strings.Auth_Text_LicenseExpired3);

        /** Please  */
        public static Text Auth_Text_SignIn1 => _Auth_Text_SignIn1.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_SignIn1 = new BehaviorSubject<string>(Strings.Auth_Text_SignIn1);

        /** sign in */
        public static Text Auth_Text_SignIn2 => _Auth_Text_SignIn2.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_SignIn2 = new BehaviorSubject<string>(Strings.Auth_Text_SignIn2);

        /**  to activate fuse X */
        public static Text Auth_Text_SignIn3 => _Auth_Text_SignIn3.AsText();
        static readonly BehaviorSubject<string> _Auth_Text_SignIn3 = new BehaviorSubject<string>(Strings.Auth_Text_SignIn3);

        /** About fuse X */
        public static Text About_Title => _About_Title.AsText();
        static readonly BehaviorSubject<string> _About_Title = new BehaviorSubject<string>(Strings.About_Title);

        /** About */
        public static Text About_Menu => _About_Menu.AsText();
        static readonly BehaviorSubject<string> _About_Menu = new BehaviorSubject<string>(Strings.About_Menu);

        /** Registered to */
        public static Text About_RegisteredTo => _About_RegisteredTo.AsText();
        static readonly BehaviorSubject<string> _About_RegisteredTo = new BehaviorSubject<string>(Strings.About_RegisteredTo);

        /** Not registered */
        public static Text About_NotRegistered => _About_NotRegistered.AsText();
        static readonly BehaviorSubject<string> _About_NotRegistered = new BehaviorSubject<string>(Strings.About_NotRegistered);

        /** Company:  */
        public static Text About_Company => _About_Company.AsText();
        static readonly BehaviorSubject<string> _About_Company = new BehaviorSubject<string>(Strings.About_Company);

        /** License:  */
        public static Text About_License => _About_License.AsText();
        static readonly BehaviorSubject<string> _About_License = new BehaviorSubject<string>(Strings.About_License);

        /** Issued:  */
        public static Text About_Issued => _About_Issued.AsText();
        static readonly BehaviorSubject<string> _About_Issued = new BehaviorSubject<string>(Strings.About_Issued);

        /** Expires:  */
        public static Text About_Expires => _About_Expires.AsText();
        static readonly BehaviorSubject<string> _About_Expires = new BehaviorSubject<string>(Strings.About_Expires);

        /** Authority:  */
        public static Text About_Authority => _About_Authority.AsText();
        static readonly BehaviorSubject<string> _About_Authority = new BehaviorSubject<string>(Strings.About_Authority);

        /** For more information visit our  */
        public static Text About_MoreInfo1 => _About_MoreInfo1.AsText();
        static readonly BehaviorSubject<string> _About_MoreInfo1 = new BehaviorSubject<string>(Strings.About_MoreInfo1);

        /** website */
        public static Text About_MoreInfo2 => _About_MoreInfo2.AsText();
        static readonly BehaviorSubject<string> _About_MoreInfo2 = new BehaviorSubject<string>(Strings.About_MoreInfo2);

        /** Enter activation code */
        public static Text Activate_Title => _Activate_Title.AsText();
        static readonly BehaviorSubject<string> _Activate_Title = new BehaviorSubject<string>(Strings.Activate_Title);

        /** Activate fuse X */
        public static Text Activate_Button => _Activate_Button.AsText();
        static readonly BehaviorSubject<string> _Activate_Button = new BehaviorSubject<string>(Strings.Activate_Button);

        /** Please enter your activation code. */
        public static Text Activate_FeedbackEmpty => _Activate_FeedbackEmpty.AsText();
        static readonly BehaviorSubject<string> _Activate_FeedbackEmpty = new BehaviorSubject<string>(Strings.Activate_FeedbackEmpty);

        /** This activation code is not valid. */
        public static Text Activate_FeedbackInvalid => _Activate_FeedbackInvalid.AsText();
        static readonly BehaviorSubject<string> _Activate_FeedbackInvalid = new BehaviorSubject<string>(Strings.Activate_FeedbackInvalid);

        /** Something went wrong while checking your license.

This might be a temporary loss of service caused by problems in the network.

Please try again later. */
        public static Text License_Error_Text => _License_Error_Text.AsText();
        static readonly BehaviorSubject<string> _License_Error_Text = new BehaviorSubject<string>(Strings.License_Error_Text);

        /** Select something to get started */
        public static Text Inspector_SelectSomething => _Inspector_SelectSomething.AsText();
        static readonly BehaviorSubject<string> _Inspector_SelectSomething = new BehaviorSubject<string>(Strings.Inspector_SelectSomething);

        /** Make class from selection */
        public static Text Toolbox_MakeClassFromSelection => _Toolbox_MakeClassFromSelection.AsText();
        static readonly BehaviorSubject<string> _Toolbox_MakeClassFromSelection = new BehaviorSubject<string>(Strings.Toolbox_MakeClassFromSelection);

        /** Your classes */
        public static Text Toolbox_YourClasses => _Toolbox_YourClasses.AsText();
        static readonly BehaviorSubject<string> _Toolbox_YourClasses = new BehaviorSubject<string>(Strings.Toolbox_YourClasses);

        /** Search your classes */
        public static Text Toolbox_SearchYourClasses => _Toolbox_SearchYourClasses.AsText();
        static readonly BehaviorSubject<string> _Toolbox_SearchYourClasses = new BehaviorSubject<string>(Strings.Toolbox_SearchYourClasses);

        /** Drag classes into the hierarchy 
to insert instances of them */
        public static Text Toolbox_DragClassesInto_Text => _Toolbox_DragClassesInto_Text.AsText();
        static readonly BehaviorSubject<string> _Toolbox_DragClassesInto_Text = new BehaviorSubject<string>(Strings.Toolbox_DragClassesInto_Text);

        /** Create a class from elements in the
hierarchy and it will appear here */
        public static Text Toolbox_CreateAClass_Text => _Toolbox_CreateAClass_Text.AsText();
        static readonly BehaviorSubject<string> _Toolbox_CreateAClass_Text = new BehaviorSubject<string>(Strings.Toolbox_CreateAClass_Text);

        /** Devices */
        public static Text CodeView_Devices => _CodeView_Devices.AsText();
        static readonly BehaviorSubject<string> _CodeView_Devices = new BehaviorSubject<string>(Strings.CodeView_Devices);

        /** Connect this project to a device with the fuse X Preview app installed on it. */
        public static Text CodeView_ToolTip => _CodeView_ToolTip.AsText();
        static readonly BehaviorSubject<string> _CodeView_ToolTip = new BehaviorSubject<string>(Strings.CodeView_ToolTip);

        /** All Output */
        public static Text LogView_AllOutput => _LogView_AllOutput.AsText();
        static readonly BehaviorSubject<string> _LogView_AllOutput = new BehaviorSubject<string>(Strings.LogView_AllOutput);


        public static void Update()
        {
            _Button_Browse.OnNext(Strings.Button_Browse);
            _Button_Cancel.OnNext(Strings.Button_Cancel);
            _Dashboard_Button_Browse.OnNext(Strings.Dashboard_Button_Browse);
            _Dashboard_Button_Create.OnNext(Strings.Dashboard_Button_Create);
            _Dashboard_Button_Open.OnNext(Strings.Dashboard_Button_Open);
            _Dashboard_Community.OnNext(Strings.Dashboard_Community);
            _Dashboard_Community_Text.OnNext(Strings.Dashboard_Community_Text);
            _Dashboard_Docs.OnNext(Strings.Dashboard_Docs);
            _Dashboard_Docs_Text.OnNext(Strings.Dashboard_Docs_Text);
            _Dashboard_Learn.OnNext(Strings.Dashboard_Learn);
            _Dashboard_Learn_Text.OnNext(Strings.Dashboard_Learn_Text);
            _Dashboard_Project_Remove.OnNext(Strings.Dashboard_Project_Remove);
            _Dashboard_Recent_Projects.OnNext(Strings.Dashboard_Recent_Projects);
            _Dashboard_LastOpened.OnNext(Strings.Dashboard_LastOpened);
            _Dashboard_Location.OnNext(Strings.Dashboard_Location);
            _Dashboard_Description.OnNext(Strings.Dashboard_Description);
            _Dashboard_New_Prefix.OnNext(Strings.Dashboard_New_Prefix);
            _Dashboard_Open_Prefix.OnNext(Strings.Dashboard_Open_Prefix);
            _MainMenu_Edit.OnNext(Strings.MainMenu_Edit);
            _MainMenu_Element.OnNext(Strings.MainMenu_Element);
            _MainMenu_Export.OnNext(Strings.MainMenu_Export);
            _MainMenu_File.OnNext(Strings.MainMenu_File);
            _MainMenu_Help.OnNext(Strings.MainMenu_Help);
            _MainMenu_Preview.OnNext(Strings.MainMenu_Preview);
            _MainMenu_Project.OnNext(Strings.MainMenu_Project);
            _MainMenu_Tools.OnNext(Strings.MainMenu_Tools);
            _MainMenu_Viewport.OnNext(Strings.MainMenu_Viewport);
            _MainMenu_Window.OnNext(Strings.MainMenu_Window);
            _SubMenu_Edit_Copy.OnNext(Strings.SubMenu_Edit_Copy);
            _SubMenu_Edit_Cut.OnNext(Strings.SubMenu_Edit_Cut);
            _SubMenu_Edit_Delete.OnNext(Strings.SubMenu_Edit_Delete);
            _SubMenu_Edit_Paste.OnNext(Strings.SubMenu_Edit_Paste);
            _SubMenu_Edit_SelectAll.OnNext(Strings.SubMenu_Edit_SelectAll);
            _SubMenu_Element_Deselect.OnNext(Strings.SubMenu_Element_Deselect);
            _SubMenu_Element_LocateInEditor.OnNext(Strings.SubMenu_Element_LocateInEditor);
            _SubMenu_Element_Remove.OnNext(Strings.SubMenu_Element_Remove);
            _SubMenu_Export_ExportForAndroid.OnNext(Strings.SubMenu_Export_ExportForAndroid);
            _SubMenu_Export_ExportForAndroidEmulator.OnNext(Strings.SubMenu_Export_ExportForAndroidEmulator);
            _SubMenu_Export_ExportForiOS.OnNext(Strings.SubMenu_Export_ExportForiOS);
            _SubMenu_Export_ExportForiOSSimulator.OnNext(Strings.SubMenu_Export_ExportForiOSSimulator);
            _SubMenu_Export_ExportForDotNet.OnNext(Strings.SubMenu_Export_ExportForDotNet);
            _SubMenu_Export_ExportForNative.OnNext(Strings.SubMenu_Export_ExportForNative);
            _SubMenu_Export_Clean.OnNext(Strings.SubMenu_Export_Clean);
            _SubMenu_File_New.OnNext(Strings.SubMenu_File_New);
            _SubMenu_File_Open.OnNext(Strings.SubMenu_File_Open);
            _SubMenu_File_Quit.OnNext(Strings.SubMenu_File_Quit);
            _SubMenu_File_Exit.OnNext(Strings.SubMenu_File_Exit);
            _SubMenu_Help_Community.OnNext(Strings.SubMenu_Help_Community);
            _SubMenu_Help_Documentation.OnNext(Strings.SubMenu_Help_Documentation);
            _SubMenu_Help_Examples.OnNext(Strings.SubMenu_Help_Examples);
            _SubMenu_Help_Tutorial.OnNext(Strings.SubMenu_Help_Tutorial);
            _SubMenu_Help_Forums.OnNext(Strings.SubMenu_Help_Forums);
            _SubMenu_Help_ReportIssue.OnNext(Strings.SubMenu_Help_ReportIssue);
            _SubMenu_Updates_CheckForUpdates.OnNext(Strings.SubMenu_Updates_CheckForUpdates);
            _SubMenu_Updates_CheckAutomatically.OnNext(Strings.SubMenu_Updates_CheckAutomatically);
            _SubMenu_Updates_UpdateAvailable.OnNext(Strings.SubMenu_Updates_UpdateAvailable);
            _SubMenu_Updates_DownloadLatestQuestion.OnNext(Strings.SubMenu_Updates_DownloadLatestQuestion);
            _SubMenu_Preview_Android.OnNext(Strings.SubMenu_Preview_Android);
            _SubMenu_Preview_AndroidEmulator.OnNext(Strings.SubMenu_Preview_AndroidEmulator);
            _SubMenu_Preview_BuildFlags.OnNext(Strings.SubMenu_Preview_BuildFlags);
            _SubMenu_Preview_iOS.OnNext(Strings.SubMenu_Preview_iOS);
            _SubMenu_Preview_iOSSimulator.OnNext(Strings.SubMenu_Preview_iOSSimulator);
            _SubMenu_Preview_Native.OnNext(Strings.SubMenu_Preview_Native);
            _SubMenu_Preview_Rebuild.OnNext(Strings.SubMenu_Preview_Rebuild);
            _SubMenu_Preview_Reconnect.OnNext(Strings.SubMenu_Preview_Reconnect);
            _SubMenu_Preview_Refresh.OnNext(Strings.SubMenu_Preview_Refresh);
            _SubMenu_Project_OpenFolder.OnNext(Strings.SubMenu_Project_OpenFolder);
            _SubMenu_Project_OpenSublime.OnNext(Strings.SubMenu_Project_OpenSublime);
            _SubMenu_Project_OpenVSCode.OnNext(Strings.SubMenu_Project_OpenVSCode);
            _SubMenu_Project_OpenTerminal.OnNext(Strings.SubMenu_Project_OpenTerminal);
            _SubMenu_Tools_InstallSDK.OnNext(Strings.SubMenu_Tools_InstallSDK);
            _SubMenu_Tools_InstallAtomPlugin.OnNext(Strings.SubMenu_Tools_InstallAtomPlugin);
            _SubMenu_Tools_InstallSublimePlugin.OnNext(Strings.SubMenu_Tools_InstallSublimePlugin);
            _SubMenu_Tools_InstallVSCodeExtension.OnNext(Strings.SubMenu_Tools_InstallVSCodeExtension);
            _SubMenu_Tools_Setup.OnNext(Strings.SubMenu_Tools_Setup);
            _SubMenu_Tools_Config.OnNext(Strings.SubMenu_Tools_Config);
            _SubMenu_Viewport_Close.OnNext(Strings.SubMenu_Viewport_Close);
            _SubMenu_Viewport_Device.OnNext(Strings.SubMenu_Viewport_Device);
            _SubMenu_Viewport_FlipAspect.OnNext(Strings.SubMenu_Viewport_FlipAspect);
            _SubMenu_Viewport_Goback.OnNext(Strings.SubMenu_Viewport_Goback);
            _SubMenu_Viewport_New.OnNext(Strings.SubMenu_Viewport_New);
            _SubMenu_Viewport_Restart.OnNext(Strings.SubMenu_Viewport_Restart);
            _SubMenu_Viewport_Selection.OnNext(Strings.SubMenu_Viewport_Selection);
            _SubMenu_Window_CompactMode.OnNext(Strings.SubMenu_Window_CompactMode);
            _SubMenu_Window_KeepWindowOnTop.OnNext(Strings.SubMenu_Window_KeepWindowOnTop);
            _SubMenu_Window_Language.OnNext(Strings.SubMenu_Window_Language);
            _SubMenu_Window_LightTheme.OnNext(Strings.SubMenu_Window_LightTheme);
            _SubMenu_Window_DarkTheme.OnNext(Strings.SubMenu_Window_DarkTheme);
            _Button_Ok.OnNext(Strings.Button_Ok);
            _Dialog_SetupGuide_Caption.OnNext(Strings.Dialog_SetupGuide_Caption);
            _Dialog_SetupGuide_Comment1.OnNext(Strings.Dialog_SetupGuide_Comment1);
            _Dialog_SetupGuide_Comment2_1.OnNext(Strings.Dialog_SetupGuide_Comment2_1);
            _Dialog_SetupGuide_Comment2_2.OnNext(Strings.Dialog_SetupGuide_Comment2_2);
            _Dialog_SetupGuide_Comment2_3.OnNext(Strings.Dialog_SetupGuide_Comment2_3);
            _Dialog_SetupGuide_Comment3.OnNext(Strings.Dialog_SetupGuide_Comment3);
            _Dialog_SetupGuide_SeeAlso1.OnNext(Strings.Dialog_SetupGuide_SeeAlso1);
            _Dialog_SetupGuide_SeeAlso2.OnNext(Strings.Dialog_SetupGuide_SeeAlso2);
            _SubMenu_Project_SketchImport.OnNext(Strings.SubMenu_Project_SketchImport);
            _Button_Done.OnNext(Strings.Button_Done);
            _LogView_Tab_Clear.OnNext(Strings.LogView_Tab_Clear);
            _LogView_Tab_Log.OnNext(Strings.LogView_Tab_Log);
            _LogView_Tab_Problems.OnNext(Strings.LogView_Tab_Problems);
            _Label_MacOnly.OnNext(Strings.Label_MacOnly);
            _LanguageUpdated_Text.OnNext(Strings.LanguageUpdated_Text);
            _NagScreen_Caption.OnNext(Strings.NagScreen_Caption);
            _NagScreen_Text.OnNext(Strings.NagScreen_Text);
            _NagScreen_Button_SignIn.OnNext(Strings.NagScreen_Button_SignIn);
            _NagScreen_Button_EnterCode.OnNext(Strings.NagScreen_Button_EnterCode);
            _NagScreen_Question.OnNext(Strings.NagScreen_Question);
            _Toolbar_Selection_Tooltip.OnNext(Strings.Toolbar_Selection_Tooltip);
            _Toolbar_Selection_Tooltip2.OnNext(Strings.Toolbar_Selection_Tooltip2);
            _Toolbar_Selection_Button.OnNext(Strings.Toolbar_Selection_Button);
            _Toolbar_Touch_Tooltip.OnNext(Strings.Toolbar_Touch_Tooltip);
            _Toolbar_Touch_Button.OnNext(Strings.Toolbar_Touch_Button);
            _Toolbar_Viewport_Tooltip.OnNext(Strings.Toolbar_Viewport_Tooltip);
            _Toolbar_Viewport_Button.OnNext(Strings.Toolbar_Viewport_Button);
            _Toolbar_Compact_Tooltip.OnNext(Strings.Toolbar_Compact_Tooltip);
            _Toolbar_Compact_Button.OnNext(Strings.Toolbar_Compact_Button);
            _Auth_Text_LicensedTo1.OnNext(Strings.Auth_Text_LicensedTo1);
            _Auth_Text_LicensedTo2.OnNext(Strings.Auth_Text_LicensedTo2);
            _Auth_Text_TrialDayLeft.OnNext(Strings.Auth_Text_TrialDayLeft);
            _Auth_Text_TrialDaysLeft.OnNext(Strings.Auth_Text_TrialDaysLeft);
            _Auth_Text_LicenseExpired1.OnNext(Strings.Auth_Text_LicenseExpired1);
            _Auth_Text_LicenseExpired2.OnNext(Strings.Auth_Text_LicenseExpired2);
            _Auth_Text_LicenseExpired3.OnNext(Strings.Auth_Text_LicenseExpired3);
            _Auth_Text_SignIn1.OnNext(Strings.Auth_Text_SignIn1);
            _Auth_Text_SignIn2.OnNext(Strings.Auth_Text_SignIn2);
            _Auth_Text_SignIn3.OnNext(Strings.Auth_Text_SignIn3);
            _About_Title.OnNext(Strings.About_Title);
            _About_Menu.OnNext(Strings.About_Menu);
            _About_RegisteredTo.OnNext(Strings.About_RegisteredTo);
            _About_NotRegistered.OnNext(Strings.About_NotRegistered);
            _About_Company.OnNext(Strings.About_Company);
            _About_License.OnNext(Strings.About_License);
            _About_Issued.OnNext(Strings.About_Issued);
            _About_Expires.OnNext(Strings.About_Expires);
            _About_Authority.OnNext(Strings.About_Authority);
            _About_MoreInfo1.OnNext(Strings.About_MoreInfo1);
            _About_MoreInfo2.OnNext(Strings.About_MoreInfo2);
            _Activate_Title.OnNext(Strings.Activate_Title);
            _Activate_Button.OnNext(Strings.Activate_Button);
            _Activate_FeedbackEmpty.OnNext(Strings.Activate_FeedbackEmpty);
            _Activate_FeedbackInvalid.OnNext(Strings.Activate_FeedbackInvalid);
            _License_Error_Text.OnNext(Strings.License_Error_Text);
            _Inspector_SelectSomething.OnNext(Strings.Inspector_SelectSomething);
            _Toolbox_MakeClassFromSelection.OnNext(Strings.Toolbox_MakeClassFromSelection);
            _Toolbox_YourClasses.OnNext(Strings.Toolbox_YourClasses);
            _Toolbox_SearchYourClasses.OnNext(Strings.Toolbox_SearchYourClasses);
            _Toolbox_DragClassesInto_Text.OnNext(Strings.Toolbox_DragClassesInto_Text);
            _Toolbox_CreateAClass_Text.OnNext(Strings.Toolbox_CreateAClass_Text);
            _CodeView_Devices.OnNext(Strings.CodeView_Devices);
            _CodeView_ToolTip.OnNext(Strings.CodeView_ToolTip);
            _LogView_AllOutput.OnNext(Strings.LogView_AllOutput);
        }
    }
}
